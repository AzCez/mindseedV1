.dash-garden{
  width:75vw;
  left:0;
  height: 100vh;
  background:$white;
  position:relative;
  // display:flex;
  // align-items: flex-end;
  // justify-content:space-around;
  // align-items : center;

    .return-dash{
      width: 75%;
      background: rgba(0, 0, 0, 0);
      height: 100vh;
      position:fixed;
      top: 0;
      right:0;
      z-index: 102;
    }

    .hidden{
      display:none;
    }
}

// .forest{
//     width:80%;
//      z-index: 2;
//   display: grid;
//   grid-template-columns: 1fr 1fr 1fr 1fr 1fr;
//   grid-template-rows: auto;
//   // grid-template-areas:
//   //   "even even . even even"
//   //   "odd odd odd odd odd";
//      background :purple;
//      .plant1{
//       width: 100px;
//       height:100px;
//       // grid-area: odd;
//       // background: teal;
//     }
//       .plant2{
//         width: 100px;
//         height:250px;
//       // grid-area: even;
//       // background: blue;
//     }
// }


*, *::before, *::after { box-sizing: border-box; }
$max-in-row: 5;
$min-in-row: $max-in-row - 1;

@mixin block() {
  width: 100% / $max-in-row;
  @for $i from 1 through $max-in-row {
    &:nth-of-type(#{$max-in-row + $min-in-row}n + #{$i}) {
      // background-color: pink;
    }
  }
  @for $i from $max-in-row through ($max-in-row + $min-in-row) {
    &:nth-of-type(#{$max-in-row + $min-in-row}n + #{$i}) {
      // background-color: indigo;
    }
  }
  &:nth-of-type(#{$max-in-row + $min-in-row}n + 1) {
    margin-left: 50% / $max-in-row;
    // background-color: teal;
  }
  &:nth-of-type(#{$max-in-row + $min-in-row}n + #{$max-in-row}) {
    // background-color: cyan;
    // margin-left: 50% / $hex-max-in-row;
  }
}

.forest {
  display: flex;
  flex-wrap: wrap;
}

.forest .tree {
  @include block();
  height:150px;
  // !Reset test: need to use something of higher
  // specificity than just .paras p when @media querying:
  // not doing this causes all specified :nth-of-type
  // rules to be applied
  // &:nth-of-type(n) {
    // background-color: black;
  // }
}

.tree {
  transform: scale(0.6);
}

